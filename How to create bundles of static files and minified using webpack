Generate a package.json inside your project root folder using :

$ npm init


Installing and setting up Webpack

$ npm install webpack webpack-bundle-tracker babel babel-loader babel-core babel-preset-es2015  babel-preset-react --save-dev  


Navigate inside your project root folder then run :

$ touch webpack.config.js


Then add this :


var path = require("path")
var webpack = require('webpack')
var BundleTracker = require('webpack-bundle-tracker')

module.exports = {
context: __dirname,

entry: './assets/js/index.js', 

output: {
    path: path.resolve('./assets/bundles/'),
    filename: "[name]-[hash].js",
},

plugins: [
    new BundleTracker({filename: './webpack-stats.json'}),
],

module: {
    loaders: [
    { test: /\.js$/, loader: 'babel-loader', exclude: /node_modules/ },
    { test: /\.jsx$/, loader: 'babel-loader', exclude: /node_modules/ }

    ],
},

}


Make sure you create the folders assets and js for our assets :

$ mkdir -p assets/js 


Loaders are plugins used by Webpack to add functionality .

$ npm install babel-loader babel-core babel-preset-es2015 babel-preset-react --save-dev


Navigate to your project root folder then execute

touch .babelrc 


Then open it and add :

/* 
    ./.babelrc
*/  
{
    "presets":[
        "es2015", "react"
    ]
}        


Here is our project folder structure

PROJECT_ROOT/
├── manage.py
├── package.json
│── webpack.config.js
│── .babelrc.js
│── webpack-stats.json 
├── node_modules/ 
├── assets/ 
│   └── js/ 
│   └── bundles/ 



The next step is to install React and other dependencies :

$ npm install --save-dev react react-dom 


in assets/js/ create index.js

$ cd ./assets/js 
$ touch index.js 


Then add :


import React, { Component } from 'react';

import ReactDOM from 'react-dom';



class App extends React.Component {
render() {
    return (
    <div style=>
        <h1>Helle Django + React = Awesomeness </h1>
    </div>);
}
}


ReactDOM.render(<App />, document.getElementById('react-app'));


In the root of your project run :

$ ./node_modules/.bin/webpack --config webpack.config.js --watch


We are going to use a Django package to integrate Webpack seamlessly with Django

$ pip install django-webpack-loader


First add it to installed apps :

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webpack_loader'
]


Then add a configuration object for webpack loader to tell it where to find bundles and where to find stats file generated by webpack-bundle-tracker

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}    


We need also to add our assets folder to staticfiles_dirs :

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets'), 
)


First create a Django app called home for example

python manage.py startapp home 


Add it to installed apps in settings.py

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webpack_loader',
    'home'
]


Next create a view function in home/views.py :

from django.shortcuts import render

def index(request):
    return render(request, 'home/index.html', {})


Then create a template in home/templates/home/ folder :

{% load render_bundle from webpack_loader %}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>React with Django </title>
</head>

<body>
    <div id="react-app"></div>
    {% render_bundle 'main' %}
</body>
</html>



-render_bundle will render the proper 
